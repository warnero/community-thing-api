/**
 * @file Node JS Meetup API library
 *
 * @author Juan Pablo Kutianski <jkutianski@gmail.com>
 *
 * @license GPL-3
 * This library is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this library.  If not, see {@link http://www.gnu.org/licenses/}.
 */

/**
 * @module meetup-api
 * 
 * @param {Object} auth Meetup API key or Meetup API oauth object
 * @param {String} auth.key     API Key
 * @param {Object} auth.oauth
 * @param {Object} auth.oauth.key   OAuth Key
 * @param {Object} auth.oauth.secret   Secret
 * 
 * @return {Object} new instance
 * 
 * @property {String} version Return module version
 * @readonly
 * @property {String} name Return module name
 * @readonly
 * @property {String} description Return module description
 * @readonly
 * @property {String} dependencies Return module dependencies
 * @readonly
 * @property {String} optionalDependencies Return module optional dependencies
 * @readonly
 * @property {String} repository Return module repository
 * @property {Boolean} authkey Return module authkey status
 * @property {Object} authkey Set authkey object
 * @property {String} authkey.key Set API/OAuth key
 * @property {String} authkey.secret Set OAuth secret
 * @readonly
 * @property {Array} commands Return module commands endpoints
 */

/**
 * [getOAuthRequestToken description]
 * @method getOAuthRequestToken
 * @param  {Function} callback
 * @param  {Object} callback.error  Callback error
 * @param  {String} callback.url    URL for redirection
 * @return {Object}                 OAuth request token
 */

/**
 * [getOAuthAccessToken description]
 * @method getOAuthAccessToken
 * @param  {String}   oauth_verifier Response from OAuth request token
 * @param  {Function} callback
 * @return {Object}                  OAuth access token
 */

/**
 * [getStreamPhotos description]
 * @method getStreamPhotos
 * @param  {Object}   params              function params
 * @param  {String}   params.since_mtime  function params
 * @return {Object}   function response
 */

/**
 * @typedef EventComments
 * @type {Object}
 * @property {String} comment       The comment text.
 * @property {Object} event         Event comment was posted in
 * @property {Object} event.id      Unique numeric id
 * @property {Object} event.@name   Name of the event
 */

/**
 * [getStreamEventComments description]
 * @method getStreamEventComments
 * @param  {Object}   params
 * @param  {String}   params.since_mtime  Return recent Event Comments with an mtime greater than the supplied time, in milliseconds since the epoch.
 * @param  {String}   params.event_id     Limit notifications to a specific event id. Use alphanumeric ids for repeating events.
 * @param  {String}   params.since_count  Request that some number of recent messages be sent immediately, if available. May not be specified in the same request as since_mtime.
 * @returns {EventComments}
 */